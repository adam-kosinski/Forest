//Shorthand functions to let us use --gh and --gw (game.scss) easily
//Note: need to use SASS interpolation e.g. #{h(3)} when inside a calc() or a css variable name

@function h($gh){
	@return calc(#{$gh} * var(--gh));
}

@function w($gw){
	@return calc(#{$gw} * var(--gw));
}

/* place info panel -------------------------------------*/

#place_info {
	height: 100%;
	width: 20%;
	left: 100%;
	transform: translate(-100%, 0);
	background-color: bisque;
	border-left: 2px solid burlywood;
	border-right: 2px solid burlywood;
	text-align: center;
	font-size: h(2.5);
	color: white;
	z-index: 10;
	background-size: cover;
}

#place_info * {
	position: relative;
}

#place_info #place_info_darkener {
	position: absolute;
	width: 100%;
	height: 100%;
	background-color: rgba(0,0,0,0.7);
}

#place_title {
	height: h(9);
	width: 85%;
	z-index: 5;
	background-color: #fffa;
	box-shadow: 0 0 h(2.1) h(2.1) #fffa;
	color: black;
	border-radius: h(3);
	left: 0;
	right: 0;
	margin: auto;
	margin-top: h(2);
}

#place_name_display {
	margin-top: h(0.5);
	font-size: 2em;
}

#place_info #top_line {
	border-top: 1px solid burlywood;
	position: absolute;
	width: w(18);
	top: h(14);
	left: w(1);
}

#place_scroll_container {
	height: h(85.5);
	margin-top: h(3.5);
	padding: 0 w(1) 0 w(1);
	overflow-y: auto;
}

#place_info div.item-container, #place_info div.thing-container, #inventory_items div.item-container {
	margin: 0 w(0.65) h(3) w(0.65);
	display: inline-block;
	vertical-align: top;
}

#thing_display {
	border-bottom: 1px solid burlywood;
	min-height: h(15);
	padding: h(1.5) 0 h(1.5) 0;
}

#item_display_title {
	margin: h(1);
}

/*note: the below item/thing styling is also used for the inventory and search_div*/
div.item-container, div.thing-container {
	/*currently the styling for this is done separately under #place_info and #search_div*/
}

div.item, div.thing, div.animator_circle {
	position: static;
	width: w(4);
	height: w(4);
	border-radius: w(4);
	border: 1px solid burlywood;
	background-color: beige;
	background-size: cover;
	background-position: center;
}

div.item-container > p, div.thing-container > p { /*select p elements that are direct children of a .item-container or .thing-container*/
	position: static;
	width: w(4);
	font-family: serif;
	margin-top: w(0.5);
	font-size: w(0.8);
	text-align: center;
	color: white;
}

.highlight_items div.item:hover {
	box-shadow: 0 0 20px 5px yellow;
	cursor: pointer;
}


@keyframes expand {
	from {transform: scale(0);}
	to {transform: scale(1);}
}

.expand {
	animation-name: expand;
	animation-duration: 0.5s;
}

.contract {
	animation-name: expand;
	animation-duration: 0.5s;
	animation-direction: reverse;
}



/* inventory ---------------------------------------------*/

#inventory {
	width: w(100);
	height: h(100);
	background-color: rgba(0,30,18,0.75);
	z-index: 5;
	display: none;
}

#inventory_board {
	width: w(70);
	height: h(90);
	left: w(5);
	top: h(5);
	background-color: saddlebrown;
	border: 5px solid saddlebrown;
}

#inventory_board #inventory_table {
	border-collapse: collapse;
	width: 100%;
	height: 100%;
	background-color: saddlebrown;
}

#inventory_table * {
	position: static;
}

#inventory_board h1 {
	font-size: h(5.1);
	font-weight: normal;
	color: white;
	text-align: center;
	position: relative;
	top: h(-1);
}

#inventory_title {
	left: calc(0.5*(#{w(70)} - #{h(33.6)}));
	transform: translate(-50%, 0);
}

/*note: these arrows from when we had a table inside the main table and didn't want to style that one*/
#inventory_table > tbody > tr:first-child > td:first-child {
	height: h(18);
	width: h(32); /*We're scaling only by height changes, except for the inventory item title*/
	background-image: url("../images/goal_title.svg");
}
#inventory_table > tbody > tr > td:nth-child(2) {
	width: h(1.6);
	background-image: url("../images/divider.svg");
	outline: 1px solid black;
}
#inventory_table > tbody > tr:first-child > td:nth-child(3) {
	width: h(16.2);
	background-image: url("../images/inventory_title_left.svg");
}
#inventory_table > tbody > tr:first-child > td:nth-child(4) {
	background-image: url("../images/inventory_title_center.svg");
	background-size: auto h(18);
}
#inventory_table > tbody > tr:first-child > td:nth-child(5) {
	width: h(9.8);
	background-image: url("../images/inventory_title_right.svg");
}
#inventory_table > tbody > tr:nth-child(2) > td:first-child {
	background-image: url("../images/goal_item_background.svg");
	background-attachment: local;
	background-size: contain;
}
#inventory_table > tbody > tr:nth-child(2) > td:nth-child(3) {
	background-image: url("../images/parchment.svg");
	vertical-align: top;
}

#inventory_table td {
	background-size: cover;
}

.wreath {
	height: h(11.2);
	top: h(-2);
}

#wreath_left {
	left: h(-6);
}

#wreath_right {
	transform: scaleX(-1);
	right: h(-6);
}

.vines {
	height: h(37.6);
	top: h(9.8);
}

#vines_tile {
	top: h(9.8);
	left: h(32);
	background-image: url("../images/vines_tile.svg");
	position: absolute;
	height: h(17.6);
	width: calc(100% - #{h(34)});
	background-size: cover;
}

#vines_left {
	left: h(-3.7);
}

#vines_right {
	right: h(-5);
}

#inventory_items {
	max-width: 100%;
	height: calc(100% - #{h(21)}); /*to account for padding and total weight display*/
	padding: h(9.5) calc(#{w(1)} + #{h(1)}) 0 calc(#{w(1)} + #{h(1)}); /*top right bottom left*/
	text-align: center;
	overflow-y: auto;
}

#inventory #inventory_items * {
	position: relative;
}

/*note: inventory_items div.item_container styled above along with the place info item/thing containers */

#inventory_items div.item-container > p {
	color: black;
}


/* total weight display -----------------------------------------------------------*/

#total_weight_inventory {
	width: 100%;
	height: h(10);
	border-radius: 10px;
}

#total_weight_inventory > div {
	display: inline-block;
	vertical-align: bottom;
}

#weight_bar_left_labels {
	width: h(12);
	background-color: red;
	font-size: h(2);
	font-weight: bold;
	position: relative;
	top: h(5);
	text-align: center;
	margin-left: h(1);
}
#weight_bar_left_labels p:nth-child(1) {
	position: absolute;
	top: h(-2.5);
	width: 100%;
}
#weight_bar_left_labels p:nth-child(2) {
	position: absolute;
	width: 100%;
}

#weight_bar_container {
	position: relative;
	top: h(5);
	width: calc(100% - #{h(17)}); /* -17 for left labels, inline block gap, and bottom labels*/
}

#weight_bar_marker {
	width: h(2.5);
	height: h(2.5);
	background-color: #d4b64a;
	border: 2px solid #968236;
	position: absolute;
	top: h(-4);
	text-align: center;
	font-weight: bold;
	font-size: h(2);
	transform: translate(-50%, 0);

	transition: left 0.5s;
	left: 80%;
}
#weight_bar_marker::after {
	content: ""; /*Needed for it to show up*/
	display: block;
	position: absolute;
	--height: #{h(1)};
	height: var(--height);
	width: 0;
	bottom:	calc(-1 * var(--height) - 2px);
	left: 50%;
	transform: translate(-50%, 0);
	border: 1px solid #968236;
}

#weight_bar {
	height: h(3);
	display: flex;
}

#weight_bar .weight_bar_segment {
	height: h(3);
	flex: 1; /*this is a shorthand property for 3 properties, but giving one value basically means
	the proportion of the whole width to take up*/

	display: flex; /*to align children text*/
	align-items: center;
	position: relative;
}

.weight_bar_segment p.speed_label {
	text-align: center;
	flex: 1 1 auto;
	font-size: h(2.5);
}

.current_segment p.speed_label {
	font-weight: bold;
	text-decoration: underline;
}

#weight_bar p.weight_label_right {
	position: absolute;
	right: 0;
	bottom: h(-3);
	transform: translate(50%, 0);
	font-size: h(3);
	font-weight: normal;
}

#weight_bar p.weight_label_left {
	position: absolute;
	left: 0;
	bottom: h(-3);
	transform: translate(-50%, 0);
	font-size: h(3);
	font-weight: normal;
}



#place_info .animator_circle, #inventory #inventory_items .animator_circle {
	position: absolute;
	top: 0;
	box-shadow: 0 0 5px 5px white;
}
